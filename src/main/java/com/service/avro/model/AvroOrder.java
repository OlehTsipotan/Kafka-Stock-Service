/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.service.avro.model;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class AvroOrder extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -9028040220593139628L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AvroOrder\",\"namespace\":\"com.service.avro.model\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"customerId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"product\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"AvroProduct\",\"fields\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"quantity\",\"type\":\"int\"},{\"name\":\"price\",\"type\":\"long\"}]}],\"default\":null},{\"name\":\"status\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"AvroOrderStatus\",\"symbols\":[\"NEW\",\"ACCEPT\",\"REJECT\",\"CONFIRMATION\",\"ROLLBACK\"]}],\"default\":null},{\"name\":\"source\",\"type\":[\"null\",\"string\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AvroOrder> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AvroOrder> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<AvroOrder> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<AvroOrder> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<AvroOrder> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this AvroOrder to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a AvroOrder from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a AvroOrder instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static AvroOrder fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.CharSequence id;
  private java.lang.Long customerId;
  private com.service.avro.model.AvroProduct product;
  private com.service.avro.model.AvroOrderStatus status;
  private java.lang.CharSequence source;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AvroOrder() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param customerId The new value for customerId
   * @param product The new value for product
   * @param status The new value for status
   * @param source The new value for source
   */
  public AvroOrder(java.lang.CharSequence id, java.lang.Long customerId, com.service.avro.model.AvroProduct product, com.service.avro.model.AvroOrderStatus status, java.lang.CharSequence source) {
    this.id = id;
    this.customerId = customerId;
    this.product = product;
    this.status = status;
    this.source = source;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return customerId;
    case 2: return product;
    case 3: return status;
    case 4: return source;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.CharSequence)value$; break;
    case 1: customerId = (java.lang.Long)value$; break;
    case 2: product = (com.service.avro.model.AvroProduct)value$; break;
    case 3: status = (com.service.avro.model.AvroOrderStatus)value$; break;
    case 4: source = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'customerId' field.
   * @return The value of the 'customerId' field.
   */
  public java.lang.Long getCustomerId() {
    return customerId;
  }


  /**
   * Sets the value of the 'customerId' field.
   * @param value the value to set.
   */
  public void setCustomerId(java.lang.Long value) {
    this.customerId = value;
  }

  /**
   * Gets the value of the 'product' field.
   * @return The value of the 'product' field.
   */
  public com.service.avro.model.AvroProduct getProduct() {
    return product;
  }


  /**
   * Sets the value of the 'product' field.
   * @param value the value to set.
   */
  public void setProduct(com.service.avro.model.AvroProduct value) {
    this.product = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public com.service.avro.model.AvroOrderStatus getStatus() {
    return status;
  }


  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(com.service.avro.model.AvroOrderStatus value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'source' field.
   * @return The value of the 'source' field.
   */
  public java.lang.CharSequence getSource() {
    return source;
  }


  /**
   * Sets the value of the 'source' field.
   * @param value the value to set.
   */
  public void setSource(java.lang.CharSequence value) {
    this.source = value;
  }

  /**
   * Creates a new AvroOrder RecordBuilder.
   * @return A new AvroOrder RecordBuilder
   */
  public static com.service.avro.model.AvroOrder.Builder newBuilder() {
    return new com.service.avro.model.AvroOrder.Builder();
  }

  /**
   * Creates a new AvroOrder RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AvroOrder RecordBuilder
   */
  public static com.service.avro.model.AvroOrder.Builder newBuilder(com.service.avro.model.AvroOrder.Builder other) {
    if (other == null) {
      return new com.service.avro.model.AvroOrder.Builder();
    } else {
      return new com.service.avro.model.AvroOrder.Builder(other);
    }
  }

  /**
   * Creates a new AvroOrder RecordBuilder by copying an existing AvroOrder instance.
   * @param other The existing instance to copy.
   * @return A new AvroOrder RecordBuilder
   */
  public static com.service.avro.model.AvroOrder.Builder newBuilder(com.service.avro.model.AvroOrder other) {
    if (other == null) {
      return new com.service.avro.model.AvroOrder.Builder();
    } else {
      return new com.service.avro.model.AvroOrder.Builder(other);
    }
  }

  /**
   * RecordBuilder for AvroOrder instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AvroOrder>
    implements org.apache.avro.data.RecordBuilder<AvroOrder> {

    private java.lang.CharSequence id;
    private java.lang.Long customerId;
    private com.service.avro.model.AvroProduct product;
    private com.service.avro.model.AvroProduct.Builder productBuilder;
    private com.service.avro.model.AvroOrderStatus status;
    private java.lang.CharSequence source;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.service.avro.model.AvroOrder.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.customerId)) {
        this.customerId = data().deepCopy(fields()[1].schema(), other.customerId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.product)) {
        this.product = data().deepCopy(fields()[2].schema(), other.product);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (other.hasProductBuilder()) {
        this.productBuilder = com.service.avro.model.AvroProduct.newBuilder(other.getProductBuilder());
      }
      if (isValidValue(fields()[3], other.status)) {
        this.status = data().deepCopy(fields()[3].schema(), other.status);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.source)) {
        this.source = data().deepCopy(fields()[4].schema(), other.source);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
    }

    /**
     * Creates a Builder by copying an existing AvroOrder instance
     * @param other The existing instance to copy.
     */
    private Builder(com.service.avro.model.AvroOrder other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.customerId)) {
        this.customerId = data().deepCopy(fields()[1].schema(), other.customerId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.product)) {
        this.product = data().deepCopy(fields()[2].schema(), other.product);
        fieldSetFlags()[2] = true;
      }
      this.productBuilder = null;
      if (isValidValue(fields()[3], other.status)) {
        this.status = data().deepCopy(fields()[3].schema(), other.status);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.source)) {
        this.source = data().deepCopy(fields()[4].schema(), other.source);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.service.avro.model.AvroOrder.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.service.avro.model.AvroOrder.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'customerId' field.
      * @return The value.
      */
    public java.lang.Long getCustomerId() {
      return customerId;
    }


    /**
      * Sets the value of the 'customerId' field.
      * @param value The value of 'customerId'.
      * @return This builder.
      */
    public com.service.avro.model.AvroOrder.Builder setCustomerId(java.lang.Long value) {
      validate(fields()[1], value);
      this.customerId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'customerId' field has been set.
      * @return True if the 'customerId' field has been set, false otherwise.
      */
    public boolean hasCustomerId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'customerId' field.
      * @return This builder.
      */
    public com.service.avro.model.AvroOrder.Builder clearCustomerId() {
      customerId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'product' field.
      * @return The value.
      */
    public com.service.avro.model.AvroProduct getProduct() {
      return product;
    }


    /**
      * Sets the value of the 'product' field.
      * @param value The value of 'product'.
      * @return This builder.
      */
    public com.service.avro.model.AvroOrder.Builder setProduct(com.service.avro.model.AvroProduct value) {
      validate(fields()[2], value);
      this.productBuilder = null;
      this.product = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'product' field has been set.
      * @return True if the 'product' field has been set, false otherwise.
      */
    public boolean hasProduct() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'product' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.service.avro.model.AvroProduct.Builder getProductBuilder() {
      if (productBuilder == null) {
        if (hasProduct()) {
          setProductBuilder(com.service.avro.model.AvroProduct.newBuilder(product));
        } else {
          setProductBuilder(com.service.avro.model.AvroProduct.newBuilder());
        }
      }
      return productBuilder;
    }

    /**
     * Sets the Builder instance for the 'product' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.service.avro.model.AvroOrder.Builder setProductBuilder(com.service.avro.model.AvroProduct.Builder value) {
      clearProduct();
      productBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'product' field has an active Builder instance
     * @return True if the 'product' field has an active Builder instance
     */
    public boolean hasProductBuilder() {
      return productBuilder != null;
    }

    /**
      * Clears the value of the 'product' field.
      * @return This builder.
      */
    public com.service.avro.model.AvroOrder.Builder clearProduct() {
      product = null;
      productBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public com.service.avro.model.AvroOrderStatus getStatus() {
      return status;
    }


    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public com.service.avro.model.AvroOrder.Builder setStatus(com.service.avro.model.AvroOrderStatus value) {
      validate(fields()[3], value);
      this.status = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public com.service.avro.model.AvroOrder.Builder clearStatus() {
      status = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'source' field.
      * @return The value.
      */
    public java.lang.CharSequence getSource() {
      return source;
    }


    /**
      * Sets the value of the 'source' field.
      * @param value The value of 'source'.
      * @return This builder.
      */
    public com.service.avro.model.AvroOrder.Builder setSource(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.source = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'source' field has been set.
      * @return True if the 'source' field has been set, false otherwise.
      */
    public boolean hasSource() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'source' field.
      * @return This builder.
      */
    public com.service.avro.model.AvroOrder.Builder clearSource() {
      source = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AvroOrder build() {
      try {
        AvroOrder record = new AvroOrder();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.customerId = fieldSetFlags()[1] ? this.customerId : (java.lang.Long) defaultValue(fields()[1]);
        if (productBuilder != null) {
          try {
            record.product = this.productBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("product"));
            throw e;
          }
        } else {
          record.product = fieldSetFlags()[2] ? this.product : (com.service.avro.model.AvroProduct) defaultValue(fields()[2]);
        }
        record.status = fieldSetFlags()[3] ? this.status : (com.service.avro.model.AvroOrderStatus) defaultValue(fields()[3]);
        record.source = fieldSetFlags()[4] ? this.source : (java.lang.CharSequence) defaultValue(fields()[4]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AvroOrder>
    WRITER$ = (org.apache.avro.io.DatumWriter<AvroOrder>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AvroOrder>
    READER$ = (org.apache.avro.io.DatumReader<AvroOrder>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.id == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.id);
    }

    if (this.customerId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.customerId);
    }

    if (this.product == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.product.customEncode(out);
    }

    if (this.status == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeEnum(this.status.ordinal());
    }

    if (this.source == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.source);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.id = null;
      } else {
        this.id = in.readString(this.id instanceof Utf8 ? (Utf8)this.id : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.customerId = null;
      } else {
        this.customerId = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.product = null;
      } else {
        if (this.product == null) {
          this.product = new com.service.avro.model.AvroProduct();
        }
        this.product.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.status = null;
      } else {
        this.status = com.service.avro.model.AvroOrderStatus.values()[in.readEnum()];
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.source = null;
      } else {
        this.source = in.readString(this.source instanceof Utf8 ? (Utf8)this.source : null);
      }

    } else {
      for (int i = 0; i < 5; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.id = null;
          } else {
            this.id = in.readString(this.id instanceof Utf8 ? (Utf8)this.id : null);
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.customerId = null;
          } else {
            this.customerId = in.readLong();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.product = null;
          } else {
            if (this.product == null) {
              this.product = new com.service.avro.model.AvroProduct();
            }
            this.product.customDecode(in);
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.status = null;
          } else {
            this.status = com.service.avro.model.AvroOrderStatus.values()[in.readEnum()];
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.source = null;
          } else {
            this.source = in.readString(this.source instanceof Utf8 ? (Utf8)this.source : null);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










